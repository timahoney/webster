<?xml version="1.0" encoding="UTF-8"?>
<!-- $Date: 1998/09/08 08:01:18 $ $Revision: 1.18 $ -->
<!--[ NamedNodeMap object description ]-->
<interface name="NamedNodeMap" inherits="" id="ID-1780488922">
  <descr><p>Objects implementing the <code>NamedNodeMap</code> interface are
      used to represent collections of nodes that can be accessed by name. Note
      that <code>NamedNodeMap</code> does not inherit from
      <code>NodeList</code>; <code>NamedNodeMap</code>s are not maintained in
      any particular order. Objects contained in an object implementing
      <code>NamedNodeMap</code> may also be accessed by an ordinal index, but
      this is simply to allow convenient enumeration of the contents of a
      <code>NamedNodeMap</code>, and does not imply that the DOM specifies an
      order to these Nodes. </p></descr>
  <method name="getNamedItem" id="ID-1074577549">
    <descr><p>Retrieves a node specified by name.</p></descr>
    <parameters>
      <param name="name" type="DOMString" attr="in">
	<descr><p>Name of a node to retrieve.</p></descr>
      </param>
    </parameters>
    <returns type="Node">
      <descr><p>A <code>Node</code> (of any type) with the specified
	  name, or <code>null</code> if the specified name did not
	  identify any node in the map. </p></descr>
    </returns>
    <raises>
      <!-- No exceptions -->
    </raises>
  </method>
  <method name="setNamedItem" id="ID-1025163788">
    <descr>
      <p>Adds a node using its <code>nodeName</code> attribute. </p>
      <p>As the <code>nodeName</code> attribute is used to
	derive the name which the node must be stored under, multiple
	nodes of certain types (those that have a "special" string
	value) cannot be stored as the names would clash. This is seen
	as preferable to allowing nodes to be aliased.</p>
    </descr>
    <parameters>
      <param name="arg" type="Node" attr="in">
	<descr><p>A node to store in a named node map. The node will
	later be accessible using the value of the
	<code>nodeName</code> attribute of the node. If a node with that
	name is already present in the map, it is replaced
	by the new one.</p></descr>
      </param>
    </parameters>
    <returns type="Node">
      <descr><p>If the new <code>Node</code> replaces an existing node with the
	  same name  the previously existing <code>Node</code> is returned,
	  otherwise <code>null</code> is returned.</p></descr>
    </returns>
    <raises>
      <exception name="DOMException">
        <descr><p>WRONG_DOCUMENT_ERR: Raised if <code>arg</code> was created from a different
	document than the one that created the <code>NamedNodeMap</code>.</p>
        <p>NO_MODIFICATION_ALLOWED_ERR: Raised if this
	<code>NamedNodeMap</code> is readonly.</p>
	<p>INUSE_ATTRIBUTE_ERR: Raised if <code>arg</code> is an <code>Attr</code>
	that is already an attribute of another <code>Element</code> object. The
	DOM user must explicitly clone <code>Attr</code>
	nodes to re-use them in other elements.</p></descr>
      </exception>
    </raises>
  </method>
  <method name="removeNamedItem" id="ID-D58B193">
    <descr><p>Removes a node specified by name. If the removed
    node is an <code>Attr</code> with a default value it is immediately
    replaced.</p></descr>
    <parameters>
      <param name="name" type="DOMString" attr="in">
	<descr><p>The name of a node to remove.</p>
        </descr>
      </param>
    </parameters>
    <returns type="Node">
       <descr><p>The node removed from the map or <code>null</code>
	    if no node with such a name exists.</p></descr>
    </returns>
    <raises>
      <exception name="DOMException">
        <descr><p>NOT_FOUND_ERR: Raised if there is no node named
	<code>name</code> in the map.</p>
	</descr>
      </exception>
    </raises>
  </method>
   <method name="item" id="ID-349467F9">
    <descr><p>Returns the <code>index</code>th item in the map.
	If <code>index</code> is greater than or equal to the number
	of nodes in the map, this returns <code>null</code>.</p>
    </descr> 
    <parameters>
      <param name="index" type="unsigned long" attr="in">
	<descr><p>Index into the map.</p></descr>
      </param>
    </parameters>
    <returns type="Node">
      <descr><p>The node at the <code>index</code>th position in the
	  <code>NamedNodeMap</code>, or <code>null</code> if that is not a
	  valid index.</p></descr>
    </returns>
    <raises>
      <!-- No exceptions -->
    </raises>
  </method>
  <attribute type="unsigned long" readonly = "yes" name="length" id="ID-6D0FB19E">
    <descr><p>The number of nodes in the map. The range of valid child node
	indices is 0 to <code>length-1</code> inclusive. </p></descr>
  </attribute>
</interface>
      
