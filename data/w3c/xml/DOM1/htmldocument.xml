<?xml version="1.0" encoding="UTF-8"?>
<!-- $Date: 1998/09/23 14:27:52 $ $Revision: 1.15 $ -->
    <interface name="HTMLDocument" inherits="Document" id="ID-26809268">
	<descr><p>An <code>HTMLDocument</code> is the root of the HTML hierarchy and
holds the entire content. Beside providing access to the hierarchy, it
also provides some convenience methods for accessing certain sets of
information from the document.</p>

<p>The following properties have been deprecated in favor of the
corresponding ones for the BODY element:</p>

<ulist>
<item><p>alinkColor</p></item> 
<item><p>background</p></item>  
<item><p>bgColor</p></item>  
<item><p>fgColor</p></item>  
<item><p>linkColor</p></item>  
<item><p>vlinkColor</p></item>  
</ulist>
<p> </p></descr>
       <attribute  type="DOMString" name="title" id="ID-18446827">
          <descr><p>The title of a document as specified by the <code>TITLE</code>
element in the head of the document. </p></descr>
       </attribute>
       <attribute  readonly="yes" type="DOMString" name="referrer" id="ID-95229140">
          <descr><p>Returns the URI of the page that linked to this page. The value is
an empty string if the user navigated to the page directly (not
through a link, but, for example, via a bookmark). </p></descr>
       </attribute>
       <attribute readonly="yes" type="DOMString" name="domain" id="ID-2250147">
          <descr><p>The domain name of the server that served the document, or a null
string if the server cannot be identified by a domain name. </p></descr>
       </attribute>
       <attribute readonly="yes" type="DOMString" name="URL" id="ID-46183437">
          <descr><p>The complete URI of the document. </p></descr>
       </attribute>
       <attribute type="HTMLElement" name="body" id="ID-56360201">
          <descr><p>The element that contains the content for the document. In documents
with <code>BODY</code> contents, returns the <code>BODY</code>
element, and in frameset documents, this returns the outermost
<code>FRAMESET</code> element. </p></descr>
       </attribute>
       <attribute readonly="yes" type="HTMLCollection" name="images" id="ID-90379117">
          <descr><p>A collection of all the <code>IMG</code> elements in a document.
The behavior is limited to <code>IMG</code> elements for
backwards compatibility.
 </p></descr>
       </attribute>
       <attribute readonly="yes" type="HTMLCollection" name="applets" id="ID-85113862">
          <descr><p>A collection of all the <code>OBJECT</code> elements that include
applets and <code>APPLET</code> (<emph>deprecated</emph>) elements in
a document. </p></descr>
       </attribute>
       <attribute readonly="yes" type="HTMLCollection" name="links" id="ID-7068919">
          <descr><p>A collection of all <code>AREA</code> elements and
anchor (<code>A</code>) elements in a document
with a value for the <code>href</code> attribute. </p></descr>
       </attribute>
       <attribute readonly="yes" type="HTMLCollection" name="forms" id="ID-1689064">
          <descr><p>A collection of all the forms of a document. </p></descr>
       </attribute>
       <attribute readonly="yes" type="HTMLCollection" name="anchors" id="ID-7577272">
          <descr><p>A collection of all the anchor (<code>A</code>) elements in a document
with a value for the <code>name</code> attribute.<emph>Note.</emph> For reasons of backwards
compatibility, the returned set of anchors only contains those anchors created with the <code>name</code> 
attribute, not those created with the <code>id</code> attribute. </p></descr>
       </attribute>
       <attribute type="DOMString" name="cookie" id="ID-8747038">
          <descr><p>The cookies associated with this document. If there are none, the
value is an empty string. Otherwise, the value is a string: a
semicolon-delimited list of "name, value" pairs for all the cookies
associated with the page. For example, <code>name=value;expires=date</code>. </p></descr>
       </attribute>
       <method name="open" id="ID-72161170">
          <descr><p><emph>Note.</emph>
This method and the ones following 
allow a user to add to or replace the structure
model of a document using strings of unparsed HTML. At the time of 
writing alternate methods for providing similar functionality for 
both HTML and XML documents were being considered. The following methods
may be deprecated at some point in the future in favor of a more
general-purpose mechanism.</p>


<p>Open a document stream for writing. If a document exists in the
target, this method clears it.</p></descr>
          <parameters>
	  <!-- No parameters -->
          </parameters>
          <returns type="void">
             <descr><p></p></descr>
          </returns>
          <raises>
          <!-- No exceptions -->
          </raises>
       </method>
       <method name="close" id="ID-98948567">
          <descr><p>Closes a document stream opened by <code>open()</code>
and forces rendering.</p></descr>
          <parameters>
	  <!-- No parameters -->
          </parameters>
          <returns type="void">
             <descr><p></p></descr>
          </returns>
          <raises>
          <!-- No exceptions -->
          </raises>
       </method>
       <method name="write" id="ID-75233634">
          <descr><p>Write a string of text to a document stream opened by
<code>open()</code>. The text is parsed into the document's structure
model.</p></descr>
          <parameters>
	  
<param id="ID-68980829" name="text" type="DOMString" attr="in">
<descr><p>The string to be parsed into some structure in the document structure
model.</p></descr>
</param>
          </parameters>
          <returns type="void">
             <descr><p></p></descr>
          </returns>
          <raises>
          <!-- No exceptions -->
          </raises>
       </method>
       <method name="writeln" id="ID-35318390">
          <descr><p>Write a string of text followed by a newline character to a document
stream opened by <code>open()</code>. The text is parsed into the
document's structure model.</p></descr>
          <parameters>
	  
<param id="ID-19167591" name="text" type="DOMString" attr="in">
<descr><p>The string to be parsed into some structure in the document structure
model.</p></descr>
</param>
          </parameters>
          <returns type="void">
             <descr><p></p></descr>
          </returns>
          <raises>
          <!-- No exceptions -->
          </raises>
       </method>
       <method name="getElementById" id="ID-36113835">
          <descr><p>Returns the Element whose <code>id</code> is given by
	  elementId. If no such element exists, returns <code>null</code>.
	  Behavior is not defined if more than one element
	  has this <code>id</code>. </p></descr>
          <parameters>
	  
<param id="ID-9998411" name="elementId" type="DOMString" attr="in">
<descr><p>The unique <code>id</code> value for an element.</p></descr>
</param>
          </parameters>
          <returns type="Element">
             <descr><p>The matching element.</p></descr>
          </returns>
          <raises>
          <!-- No exceptions -->
          </raises>
       </method>
       <method name="getElementsByName" id="ID-71555259">
          <descr><p>Returns the (possibly empty) collection of elements whose
<code>name</code> value is given by <code>elementName</code>.</p></descr>
          <parameters>
	  
<param id="ID-81610098" name="elementName" type="DOMString" attr="in">
<descr><p>The <code>name</code> attribute value for an element.</p></descr>
</param>
          </parameters>
          <returns type="NodeList">
             <descr><p>The matching elements.</p></descr>
          </returns>
          <raises>
          <!-- No exceptions -->
          </raises>
       </method>
</interface>
